---
#- name: Testing
#  debug:
#    msg: "{{ all_network_interfaces.networkinterfaces | selectattr('name', '==', network_adapter) | map(attribute='ip_configurations') | map('first') | map(attribute='private_ip_address') | first}}"
#    msg: "{{ all_network_interfaces.networkinterfaces | selectattr('name', '==', network_adapter) | map(attribute='ip_configurations')}}"

- name: Add or Update CMDB CI - Network Adapters
  servicenow.itsm.configuration_item:
    instance: "{{snow_details}}"
    name: "{{ network_adapter }}"
    short_description: "Azure Network Adapter"
#    serial_number: "{{ item.id }}"
    #asset_tag: "{{ inv_entries.asset }}"
    sys_class_name: "cmdb_ci_network_adapter"
    #environment: "{{tags.environment | default('Environment Tag Missing')}}"
    category: Hardware
#    #ip_address: "{{ private_ipv4_addresses | default('IP Address Missing') }}"
    other:
      subcategory: Network
      cmdb_ci: "{{ host_data.record.sys_id }}"
      discovery_source: "Azure through Ansible Automation"
#      owned_by: "{{tags.owner | default('Owner Tag Missing')}}"
      supported_by: "JonnySykes IT Services LTD"
#      host_name: "{{ item.name }}"
#      os_domain: "{{ item.os_type }}"
      virtual: "true"
      location: "{{host_data.record.location}}"
      mac_address: "{{ all_network_interfaces.networkinterfaces | selectattr('name', '==', network_adapter) | map(attribute='mac_address') | first }}"
  register: network_data

- name: Add or Update CMDB CI - IP Addresses
  servicenow.itsm.configuration_item:
    instance: "{{snow_details}}"
    name: "{{ input_ipaddress }}"
    short_description: "Azure IP Address"
#    serial_number: "{{ item.id }}"
    #asset_tag: "{{ inv_entries.asset }}"
    sys_class_name: "cmdb_ci_ip_address"
    #environment: "{{tags.environment | default('Environment Tag Missing')}}"
    #category: Hardware
#    #ip_address: "{{ private_ipv4_addresses | default('IP Address Missing') }}"
    other:
      #subcategory: Network
      nic: "{{ network_data.record.sys_id }}"
      discovery_source: "Azure through Ansible Automation"
#      owned_by: "{{tags.owner | default('Owner Tag Missing')}}"
      supported_by: "JonnySykes IT Services LTD"
#      host_name: "{{ item.name }}"
#      os_domain: "{{ item.os_type }}"
      virtual: "true"
      location: "{{host_data.record.location}}"
      ip_address: "{{ input_ipaddress }}"
      ip_version: >-
          {% if ip_address | regex_search('^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$') is not none %}
            4
          {% elif ip_address | regex_search('^([0-9a-fA-F]{0,4}:){2,7}[0-9a-fA-F]{0,4}$') is not none %}
            6
          {% else %}
            Unknown
          {% endif %}

      #ip_version: "4"
  when: input_ipaddress | length > 0
  loop:
    - "{{ all_network_interfaces.networkinterfaces | selectattr('name', '==', network_adapter) | map(attribute='ip_configurations') | map('first') | map(attribute='private_ip_address') | first}}"
    - "{{ all_network_interfaces.networkinterfaces | selectattr('name', '==', network_adapter) | map(attribute='ip_configurations') | map('first') | map(attribute='public_ip_address') | first}}"
  loop_control:
    loop_var: input_ipaddress
    label: ip_address

#- name: Print a variable
#  debug:
#    msg: "{{ all_network_interfaces.networkinterfaces | selectattr('name', '==', network_adapter) | map(attribute='subnet') | first }}"
  